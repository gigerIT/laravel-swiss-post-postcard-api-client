name: CI

on:
  push:
    branches:
      - main
      - master

permissions:
  id-token: write
  contents: write
  issues: write
  pull-requests: write

jobs:
  CodeStyle:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(main): release')"
    timeout-minutes: 5
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          ref: ${{ github.head_ref }}

      - name: Fix PHP code style issues
        uses: aglipanci/laravel-pint-action@2.6

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: Fix styling

  Test:
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, 'chore(main): release')"
    timeout-minutes: 5
    needs: CodeStyle
    strategy:
      fail-fast: true
      matrix:
        php: [8.3]
        laravel: [12.*]
        stability: [prefer-stable]
        include:
          - laravel: 12.*
            testbench: 10.6

    name: Test P${{ matrix.php }} - L${{ matrix.laravel }} - ${{ matrix.stability }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, fileinfo
          coverage: none

      - name: Setup problem matchers
        run: |
          echo "::add-matcher::${{ runner.tool_cache }}/php.json"
          echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer require "laravel/framework:${{ matrix.laravel }}" "orchestra/testbench:${{ matrix.testbench }}" --no-interaction --no-update
          composer update --${{ matrix.stability }} --prefer-dist --no-interaction

      - name: List Installed Dependencies
        run: composer show -D

      - name: Execute tests
        run: vendor/bin/pest --ci

  Release:
    needs: [Test]
    runs-on: ubuntu-latest
    if: "github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(main): release')"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Release Please
        uses: googleapis/release-please-action@v4
        with:
          release-type: php
          token: ${{ secrets.GITHUB_TOKEN }}
